# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class UserDetails(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, pesel: str = None, driver_licence_number: str = None, driver_licence_expiration_date: str = None,
                 last_rental: int = None, last_reservation: int = None, role: str = None):  # noqa: E501
        """UserDetails - a model defined in Swagger

        :param pesel: The pesel of this UserDetails.  # noqa: E501
        :type pesel: str
        :param driver_licence_number: The driver_licence_number of this UserDetails.  # noqa: E501
        :type driver_licence_number: str
        :param driver_licence_expiration_date: The driver_licence_expiration_date of this UserDetails.  # noqa: E501
        :type driver_licence_expiration_date: str
        :param last_rental: The last_rental of this UserDetails.  # noqa: E501
        :type last_rental: int
        :param last_reservation: The last_reservation of this UserDetails.  # noqa: E501
        :type last_reservation: int
        :param role: The role of this UserDetails.  # noqa: E501
        :type role: str
        """
        self.swagger_types = {
            'pesel': str,
            'driver_licence_number': str,
            'driver_licence_expiration_date': str,
            'last_rental': int,
            'last_reservation': int,
            'role': str
        }

        self.attribute_map = {
            'pesel': 'pesel',
            'driver_licence_number': 'driverLicenceNumber',
            'driver_licence_expiration_date': 'driverLicenceExpirationDate',
            'last_rental': 'lastRental',
            'last_reservation': 'lastReservation',
            'role': 'role'
        }
        self._pesel = pesel
        self._driver_licence_number = driver_licence_number
        self._driver_licence_expiration_date = driver_licence_expiration_date
        self._last_rental = last_rental
        self._last_reservation = last_reservation
        self._role = role

    @classmethod
    def from_dict(cls, dikt) -> 'UserDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserDetails of this UserDetails.  # noqa: E501
        :rtype: UserDetails
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pesel(self) -> str:
        """Gets the pesel of this UserDetails.

        Pesel uzytkownika  # noqa: E501

        :return: The pesel of this UserDetails.
        :rtype: str
        """
        return self._pesel

    @pesel.setter
    def pesel(self, pesel: str):
        """Sets the pesel of this UserDetails.

        Pesel uzytkownika  # noqa: E501

        :param pesel: The pesel of this UserDetails.
        :type pesel: str
        """

        self._pesel = pesel

    @property
    def driver_licence_number(self) -> str:
        """Gets the driver_licence_number of this UserDetails.

        Numer prawa jazdy  # noqa: E501

        :return: The driver_licence_number of this UserDetails.
        :rtype: str
        """
        return self._driver_licence_number

    @driver_licence_number.setter
    def driver_licence_number(self, driver_licence_number: str):
        """Sets the driver_licence_number of this UserDetails.

        Numer prawa jazdy  # noqa: E501

        :param driver_licence_number: The driver_licence_number of this UserDetails.
        :type driver_licence_number: str
        """

        self._driver_licence_number = driver_licence_number

    @property
    def driver_licence_expiration_date(self) -> str:
        """Gets the driver_licence_expiration_date of this UserDetails.

        Data waznosci licencji  # noqa: E501

        :return: The driver_licence_expiration_date of this UserDetails.
        :rtype: str
        """
        return self._driver_licence_expiration_date

    @driver_licence_expiration_date.setter
    def driver_licence_expiration_date(self, driver_licence_expiration_date: str):
        """Sets the driver_licence_expiration_date of this UserDetails.

        Data waznosci licencji  # noqa: E501

        :param driver_licence_expiration_date: The driver_licence_expiration_date of this UserDetails.
        :type driver_licence_expiration_date: str
        """

        self._driver_licence_expiration_date = driver_licence_expiration_date

    @property
    def last_rental(self) -> int:
        """Gets the last_rental of this UserDetails.

        Ostatni wynajem (moze byc aktualnie)  # noqa: E501

        :return: The last_rental of this UserDetails.
        :rtype: int
        """
        return self._last_rental

    @last_rental.setter
    def last_rental(self, last_rental: int):
        """Sets the last_rental of this UserDetails.

        Ostatni wynajem (moze byc aktualnie)  # noqa: E501

        :param last_rental: The last_rental of this UserDetails.
        :type last_rental: int
        """

        self._last_rental = last_rental

    @property
    def last_reservation(self) -> int:
        """Gets the last_reservation of this UserDetails.

        Ostatnia rezerwacja  # noqa: E501

        :return: The last_reservation of this UserDetails.
        :rtype: int
        """
        return self._last_reservation

    @last_reservation.setter
    def last_reservation(self, last_reservation: int):
        """Sets the last_reservation of this UserDetails.

        Ostatnia rezerwacja  # noqa: E501

        :param last_reservation: The last_reservation of this UserDetails.
        :type last_reservation: int
        """

        self._last_reservation = last_reservation

    @property
    def role(self) -> str:
        """Gets the role of this UserDetails.

        Rola w systemie. Null jezeli brak roli, ADMIN, SERVICE  # noqa: E501

        :return: The role of this UserDetails.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role: str):
        """Sets the role of this UserDetails.

        Rola w systemie. Null jezeli brak roli, ADMIN, SERVICE  # noqa: E501

        :param role: The role of this UserDetails.
        :type role: str
        """

        self._role = role
