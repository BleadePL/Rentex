# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Rental(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, rental_id: int = None, car_id: int = None, rental_start: int = None, rental_end: int = None,
                 rental_cost: str = None, mileage: int = None, ended: bool = None):  # noqa: E501
        """Rental - a model defined in Swagger

        :param rental_id: The rental_id of this Rental.  # noqa: E501
        :type rental_id: int
        :param car_id: The car_id of this Rental.  # noqa: E501
        :type car_id: int
        :param rental_start: The rental_start of this Rental.  # noqa: E501
        :type rental_start: int
        :param rental_end: The rental_end of this Rental.  # noqa: E501
        :type rental_end: int
        :param rental_cost: The rental_cost of this Rental.  # noqa: E501
        :type rental_cost: str
        :param mileage: The mileage of this Rental.  # noqa: E501
        :type mileage: int
        :param ended: The ended of this Rental.  # noqa: E501
        :type ended: bool
        """
        self.swagger_types = {
            'rental_id': int,
            'car_id': int,
            'rental_start': int,
            'rental_end': int,
            'rental_cost': str,
            'mileage': int,
            'ended': bool
        }

        self.attribute_map = {
            'rental_id': 'rentalId',
            'car_id': 'carId',
            'rental_start': 'rentalStart',
            'rental_end': 'rentalEnd',
            'rental_cost': 'rentalCost',
            'mileage': 'mileage',
            'ended': 'ended'
        }
        self._rental_id = rental_id
        self._car_id = car_id
        self._rental_start = rental_start
        self._rental_end = rental_end
        self._rental_cost = rental_cost
        self._mileage = mileage
        self._ended = ended

    @classmethod
    def from_dict(cls, dikt) -> 'Rental':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Rental of this Rental.  # noqa: E501
        :rtype: Rental
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rental_id(self) -> int:
        """Gets the rental_id of this Rental.

        Id wynajecia  # noqa: E501

        :return: The rental_id of this Rental.
        :rtype: int
        """
        return self._rental_id

    @rental_id.setter
    def rental_id(self, rental_id: int):
        """Sets the rental_id of this Rental.

        Id wynajecia  # noqa: E501

        :param rental_id: The rental_id of this Rental.
        :type rental_id: int
        """

        self._rental_id = rental_id

    @property
    def car_id(self) -> int:
        """Gets the car_id of this Rental.

        Id auta  # noqa: E501

        :return: The car_id of this Rental.
        :rtype: int
        """
        return self._car_id

    @car_id.setter
    def car_id(self, car_id: int):
        """Sets the car_id of this Rental.

        Id auta  # noqa: E501

        :param car_id: The car_id of this Rental.
        :type car_id: int
        """

        self._car_id = car_id

    @property
    def rental_start(self) -> int:
        """Gets the rental_start of this Rental.

        Czas rozpoczecia wynajecia  # noqa: E501

        :return: The rental_start of this Rental.
        :rtype: int
        """
        return self._rental_start

    @rental_start.setter
    def rental_start(self, rental_start: int):
        """Sets the rental_start of this Rental.

        Czas rozpoczecia wynajecia  # noqa: E501

        :param rental_start: The rental_start of this Rental.
        :type rental_start: int
        """

        self._rental_start = rental_start

    @property
    def rental_end(self) -> int:
        """Gets the rental_end of this Rental.

        Czas zakonczenia wynajecia  # noqa: E501

        :return: The rental_end of this Rental.
        :rtype: int
        """
        return self._rental_end

    @rental_end.setter
    def rental_end(self, rental_end: int):
        """Sets the rental_end of this Rental.

        Czas zakonczenia wynajecia  # noqa: E501

        :param rental_end: The rental_end of this Rental.
        :type rental_end: int
        """

        self._rental_end = rental_end

    @property
    def rental_cost(self) -> str:
        """Gets the rental_cost of this Rental.

        Koszt wynajecia  # noqa: E501

        :return: The rental_cost of this Rental.
        :rtype: str
        """
        return self._rental_cost

    @rental_cost.setter
    def rental_cost(self, rental_cost: str):
        """Sets the rental_cost of this Rental.

        Koszt wynajecia  # noqa: E501

        :param rental_cost: The rental_cost of this Rental.
        :type rental_cost: str
        """

        self._rental_cost = rental_cost

    @property
    def mileage(self) -> int:
        """Gets the mileage of this Rental.

        Ile metrów przejechał autem?  # noqa: E501

        :return: The mileage of this Rental.
        :rtype: int
        """
        return self._mileage

    @mileage.setter
    def mileage(self, mileage: int):
        """Sets the mileage of this Rental.

        Ile metrów przejechał autem?  # noqa: E501

        :param mileage: The mileage of this Rental.
        :type mileage: int
        """

        self._mileage = mileage

    @property
    def ended(self) -> bool:
        """Gets the ended of this Rental.

        Czy to wynajecie zostalo juz zakonczone?  # noqa: E501

        :return: The ended of this Rental.
        :rtype: bool
        """
        return self._ended

    @ended.setter
    def ended(self, ended: bool):
        """Sets the ended of this Rental.

        Czy to wynajecie zostalo juz zakonczone?  # noqa: E501

        :param ended: The ended of this Rental.
        :type ended: bool
        """

        self._ended = ended
