# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class UserChangepasswdBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, new_passwd: str = None, old_passwd: str = None):  # noqa: E501
        """UserChangepasswdBody - a model defined in Swagger

        :param new_passwd: The new_passwd of this UserChangepasswdBody.  # noqa: E501
        :type new_passwd: str
        :param old_passwd: The old_passwd of this UserChangepasswdBody.  # noqa: E501
        :type old_passwd: str
        """
        self.swagger_types = {
            'new_passwd': str,
            'old_passwd': str
        }

        self.attribute_map = {
            'new_passwd': 'newPasswd',
            'old_passwd': 'oldPasswd'
        }
        self._new_passwd = new_passwd
        self._old_passwd = old_passwd

    @classmethod
    def from_dict(cls, dikt) -> 'UserChangepasswdBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The user_changepasswd_body of this UserChangepasswdBody.  # noqa: E501
        :rtype: UserChangepasswdBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def new_passwd(self) -> str:
        """Gets the new_passwd of this UserChangepasswdBody.

        Nowe haslo, zakodowane bcryptem  # noqa: E501

        :return: The new_passwd of this UserChangepasswdBody.
        :rtype: str
        """
        return self._new_passwd

    @new_passwd.setter
    def new_passwd(self, new_passwd: str):
        """Sets the new_passwd of this UserChangepasswdBody.

        Nowe haslo, zakodowane bcryptem  # noqa: E501

        :param new_passwd: The new_passwd of this UserChangepasswdBody.
        :type new_passwd: str
        """

        self._new_passwd = new_passwd

    @property
    def old_passwd(self) -> str:
        """Gets the old_passwd of this UserChangepasswdBody.

        Stare haslo, zakodowane bcryptem  # noqa: E501

        :return: The old_passwd of this UserChangepasswdBody.
        :rtype: str
        """
        return self._old_passwd

    @old_passwd.setter
    def old_passwd(self, old_passwd: str):
        """Sets the old_passwd of this UserChangepasswdBody.

        Stare haslo, zakodowane bcryptem  # noqa: E501

        :param old_passwd: The old_passwd of this UserChangepasswdBody.
        :type old_passwd: str
        """

        self._old_passwd = old_passwd
