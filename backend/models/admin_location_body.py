# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.location import Location  # noqa: F401,E501
from swagger_server import util


class AdminLocationBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, location_id: str = None, name: str = None, location_lat: str = None, location_long: str = None,
                 location_type: str = None, location_reward: str = None):  # noqa: E501
        """AdminLocationBody - a model defined in Swagger

        :param location_id: The location_id of this AdminLocationBody.  # noqa: E501
        :type location_id: str
        :param name: The name of this AdminLocationBody.  # noqa: E501
        :type name: str
        :param location_lat: The location_lat of this AdminLocationBody.  # noqa: E501
        :type location_lat: str
        :param location_long: The location_long of this AdminLocationBody.  # noqa: E501
        :type location_long: str
        :param location_type: The location_type of this AdminLocationBody.  # noqa: E501
        :type location_type: str
        :param location_reward: The location_reward of this AdminLocationBody.  # noqa: E501
        :type location_reward: str
        """
        self.swagger_types = {
            'location_id': str,
            'name': str,
            'location_lat': str,
            'location_long': str,
            'location_type': str,
            'location_reward': str
        }

        self.attribute_map = {
            'location_id': 'locationId',
            'name': 'name',
            'location_lat': 'locationLat',
            'location_long': 'locationLong',
            'location_type': 'locationType',
            'location_reward': 'locationReward'
        }
        self._location_id = location_id
        self._name = name
        self._location_lat = location_lat
        self._location_long = location_long
        self._location_type = location_type
        self._location_reward = location_reward

    @classmethod
    def from_dict(cls, dikt) -> 'AdminLocationBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The admin_location_body of this AdminLocationBody.  # noqa: E501
        :rtype: AdminLocationBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_id(self) -> str:
        """Gets the location_id of this AdminLocationBody.

        ID Lokalizacji  # noqa: E501

        :return: The location_id of this AdminLocationBody.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id: str):
        """Sets the location_id of this AdminLocationBody.

        ID Lokalizacji  # noqa: E501

        :param location_id: The location_id of this AdminLocationBody.
        :type location_id: str
        """

        self._location_id = location_id

    @property
    def name(self) -> str:
        """Gets the name of this AdminLocationBody.

        Nazwa obiektu  # noqa: E501

        :return: The name of this AdminLocationBody.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this AdminLocationBody.

        Nazwa obiektu  # noqa: E501

        :param name: The name of this AdminLocationBody.
        :type name: str
        """

        self._name = name

    @property
    def location_lat(self) -> str:
        """Gets the location_lat of this AdminLocationBody.

        Szerokosc geograficzna  # noqa: E501

        :return: The location_lat of this AdminLocationBody.
        :rtype: str
        """
        return self._location_lat

    @location_lat.setter
    def location_lat(self, location_lat: str):
        """Sets the location_lat of this AdminLocationBody.

        Szerokosc geograficzna  # noqa: E501

        :param location_lat: The location_lat of this AdminLocationBody.
        :type location_lat: str
        """

        self._location_lat = location_lat

    @property
    def location_long(self) -> str:
        """Gets the location_long of this AdminLocationBody.

        Dlugosc geograficzna  # noqa: E501

        :return: The location_long of this AdminLocationBody.
        :rtype: str
        """
        return self._location_long

    @location_long.setter
    def location_long(self, location_long: str):
        """Sets the location_long of this AdminLocationBody.

        Dlugosc geograficzna  # noqa: E501

        :param location_long: The location_long of this AdminLocationBody.
        :type location_long: str
        """

        self._location_long = location_long

    @property
    def location_type(self) -> str:
        """Gets the location_type of this AdminLocationBody.

        Typ obiektu  # noqa: E501

        :return: The location_type of this AdminLocationBody.
        :rtype: str
        """
        return self._location_type

    @location_type.setter
    def location_type(self, location_type: str):
        """Sets the location_type of this AdminLocationBody.

        Typ obiektu  # noqa: E501

        :param location_type: The location_type of this AdminLocationBody.
        :type location_type: str
        """

        self._location_type = location_type

    @property
    def location_reward(self) -> str:
        """Gets the location_reward of this AdminLocationBody.

        Nagroda za pozostawienie auta tutaj  # noqa: E501

        :return: The location_reward of this AdminLocationBody.
        :rtype: str
        """
        return self._location_reward

    @location_reward.setter
    def location_reward(self, location_reward: str):
        """Sets the location_reward of this AdminLocationBody.

        Nagroda za pozostawienie auta tutaj  # noqa: E501

        :param location_reward: The location_reward of this AdminLocationBody.
        :type location_reward: str
        """

        self._location_reward = location_reward
