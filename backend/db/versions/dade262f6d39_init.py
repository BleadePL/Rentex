"""init

Revision ID: dade262f6d39
Revises: 
Create Date: 2022-02-01 20:39:32.963141

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'dade262f6d39'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Cars',
                    sa.Column('carId', sa.Integer(), nullable=False),
                    sa.Column('brand', sa.String(length=30), nullable=False, comment='Nazwa marki (pełna)'),
                    sa.Column('vin', sa.String(length=17), nullable=False),
                    sa.Column('regCountryCode', sa.String(length=2), nullable=False),
                    sa.Column('regNumber', sa.String(length=10), nullable=False),
                    sa.Column('modelName', sa.String(length=50), nullable=False),
                    sa.Column('passengerNumber', sa.Integer(), nullable=False),
                    sa.Column('chargeLevel', sa.Integer(), nullable=False),
                    sa.Column('mileage', sa.Integer(), nullable=False),
                    sa.Column('currentLocationLat', sa.DECIMAL(precision=10, scale=8), nullable=False),
                    sa.Column('currentLocationLong', sa.DECIMAL(precision=11, scale=8), nullable=False),
                    sa.Column('status',
                              sa.Enum('ACTIVE', 'RESERVED', 'INACTIVE', 'SERVICE', 'INUSE', 'UNKNOWN', 'DELETED',
                                      name='carstatusenum'), nullable=False,
                              comment='ACTIVE - aktywny\\nRESERVED - zarezerwowany\\nINACTIVE - wyłączony z użycia\\nSERVICE - Serwisowany\\nINUSE - w uzyciu\\nUNKNOWN - nieznany stan'),
                    sa.Column('activationCost', sa.String(length=30), nullable=False),
                    sa.Column('kmCost', sa.String(length=30), nullable=False),
                    sa.Column('timeCost', sa.String(length=30), nullable=False),
                    sa.Column('esimNumber', sa.Integer(), nullable=False),
                    sa.Column('eSimImei', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('carId'),
                    sa.UniqueConstraint('carId'),
                    sa.UniqueConstraint('vin')
                    )
    op.create_table('Clients',
                    sa.Column('clientId', sa.Integer(), nullable=False),
                    sa.Column('pesel', sa.String(length=20), nullable=False),
                    sa.Column('surname', sa.String(length=30), nullable=False),
                    sa.Column('name', sa.String(length=30), nullable=False),
                    sa.Column('address', sa.String(length=255), nullable=False),
                    sa.Column('driverLicenceNumber', sa.Integer(), nullable=True),
                    sa.Column('driverLicenceExpirationDate', sa.Integer(), nullable=True),
                    sa.Column('balance', sa.String(length=20), server_default=sa.text("'0'"), nullable=False),
                    sa.Column('login', sa.String(length=20), nullable=False),
                    sa.Column('password', sa.String(length=64), nullable=False),
                    sa.Column('email', sa.String(length=50), nullable=False),
                    sa.Column('accountType',
                              sa.Enum('PERSONAL', 'COMPANY', 'ORGANISATION', 'UNKNOWN', name='accounttypeenum'),
                              nullable=False,
                              comment='PERSONAL - osoba prywatna\\nCOMPANY - firma\\nORGANISATION - organizacja\\nUNKNOWN - Inne'),
                    sa.Column('activationCode', sa.Integer(), nullable=True),
                    sa.Column('status',
                              sa.Enum('ACTIVE', 'INACTIVE', 'DOCUMENTS', 'PENDING', 'PAYMENT', 'LOCKED', 'DELETED',
                                      name='accountstatusenum'), nullable=False,
                              comment='ACTIVE - Aktywne konto\\nINACTIVE - nieaktwyne konto\\nDOCUMENTS - Brak dokumentow\\nPENDING - wyslano dokumenty, oczekiwanie na potwierdzenie\\nPAYMENT - Brak srodkow na koncie\\nLOCKED - konto zablokowane\\nDELETED - konto usuniete'),
                    sa.PrimaryKeyConstraint('clientId'),
                    sa.UniqueConstraint('clientId')
                    )
    op.create_table('Locations',
                    sa.Column('locationId', sa.Integer(), nullable=False),
                    sa.Column('locationType', sa.Enum('STATION', 'CLEAN', 'SERVICE', 'SPECIAL_POINT', 'UNKNOWN',
                                                      name='locationtypeenum'), nullable=False,
                              comment='STATION - Stacja benzynowa\\nCLEAN - stacja czyszczenia\\nSERVICE - Serwis\\nSPECIAL_POINT - Punkt specjalny\\nUNKNOWN - nieznany'),
                    sa.Column('locationName', sa.String(length=100), nullable=False),
                    sa.Column('locationAddress', sa.String(length=100), nullable=True),
                    sa.Column('leaveReward', sa.String(length=30), nullable=False),
                    sa.Column('locationLat', sa.DECIMAL(precision=10, scale=8), nullable=False),
                    sa.Column('locationLong', sa.DECIMAL(precision=11, scale=8), nullable=False),
                    sa.PrimaryKeyConstraint('locationId'),
                    sa.UniqueConstraint('locationId')
                    )
    op.create_table('Roles',
                    sa.Column('roleId', sa.Integer(), nullable=False),
                    sa.Column('RoleName', sa.String(length=100), nullable=True),
                    sa.Column('PermissionsLevel', sa.Integer(), nullable=True),
                    sa.PrimaryKeyConstraint('roleId'),
                    sa.UniqueConstraint('roleId')
                    )
    op.create_table('ClientRoles',
                    sa.Column('clientId', sa.Integer(), nullable=False),
                    sa.Column('roleId', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['clientId'], ['Clients.clientId'], ),
                    sa.ForeignKeyConstraint(['roleId'], ['Roles.roleId'], ),
                    sa.PrimaryKeyConstraint('clientId', 'roleId')
                    )
    op.create_index(op.f('ix_ClientRoles_clientId'), 'ClientRoles', ['clientId'], unique=False)
    op.create_index(op.f('ix_ClientRoles_roleId'), 'ClientRoles', ['roleId'], unique=False)
    op.create_table('CreditCards',
                    sa.Column('creditCardId', sa.Integer(), nullable=False),
                    sa.Column('cardNumber', sa.String(length=20), nullable=True),
                    sa.Column('expirationDate', sa.String(length=5), nullable=True),
                    sa.Column('cardHolderName', sa.String(length=30), nullable=True),
                    sa.Column('cardHolderAddress', sa.String(length=100), nullable=True),
                    sa.Column('clientId', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['clientId'], ['Clients.clientId'], ),
                    sa.PrimaryKeyConstraint('creditCardId'),
                    sa.UniqueConstraint('creditCardId')
                    )
    op.create_index(op.f('ix_CreditCards_clientId'), 'CreditCards', ['clientId'], unique=False)
    op.create_table('Rentals',
                    sa.Column('rentalId', sa.BigInteger(), nullable=False),
                    sa.Column('rentalStart', sa.DateTime(), nullable=False),
                    sa.Column('rentalEnd', sa.DateTime(), nullable=True),
                    sa.Column('mileage', sa.Integer(), nullable=True),
                    sa.Column('cost', sa.String(length=30), nullable=True),
                    sa.Column('ended', sa.Boolean(), nullable=False),
                    sa.Column('carId', sa.Integer(), nullable=False),
                    sa.Column('clientId', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['carId'], ['Cars.carId'], ),
                    sa.ForeignKeyConstraint(['clientId'], ['Clients.clientId'], ),
                    sa.PrimaryKeyConstraint('rentalId'),
                    sa.UniqueConstraint('rentalId')
                    )
    op.create_index(op.f('ix_Rentals_carId'), 'Rentals', ['carId'], unique=False)
    op.create_index(op.f('ix_Rentals_clientId'), 'Rentals', ['clientId'], unique=False)
    op.create_table('Reservations',
                    sa.Column('reservationId', sa.Integer(), nullable=False),
                    sa.Column('reservationStart', sa.DateTime(), nullable=False),
                    sa.Column('reservationEnd', sa.DateTime(), nullable=True),
                    sa.Column('reservationCost', sa.String(length=30), nullable=True),
                    sa.Column('clientId', sa.Integer(), nullable=True),
                    sa.Column('carId', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['carId'], ['Cars.carId'], ),
                    sa.ForeignKeyConstraint(['clientId'], ['Clients.clientId'], ),
                    sa.PrimaryKeyConstraint('reservationId'),
                    sa.UniqueConstraint('reservationId')
                    )
    op.create_index(op.f('ix_Reservations_carId'), 'Reservations', ['carId'], unique=False)
    op.create_index(op.f('ix_Reservations_clientId'), 'Reservations', ['clientId'], unique=False)
    op.create_table('Services',
                    sa.Column('serviceId', sa.Integer(), nullable=False),
                    sa.Column('dateStart', sa.DateTime(), nullable=False),
                    sa.Column('dateEnd', sa.DateTime(), nullable=True),
                    sa.Column('description', sa.String(length=255), nullable=True),
                    sa.Column('locationId', sa.Integer(), nullable=True),
                    sa.Column('carId', sa.Integer(), nullable=True),
                    sa.Column('clientId', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['carId'], ['Cars.carId'], ),
                    sa.ForeignKeyConstraint(['clientId'], ['Clients.clientId'], ),
                    sa.ForeignKeyConstraint(['locationId'], ['Locations.locationId'], ),
                    sa.PrimaryKeyConstraint('serviceId'),
                    sa.UniqueConstraint('serviceId')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Services')
    op.drop_index(op.f('ix_Reservations_clientId'), table_name='Reservations')
    op.drop_index(op.f('ix_Reservations_carId'), table_name='Reservations')
    op.drop_table('Reservations')
    op.drop_index(op.f('ix_Rentals_clientId'), table_name='Rentals')
    op.drop_index(op.f('ix_Rentals_carId'), table_name='Rentals')
    op.drop_table('Rentals')
    op.drop_index(op.f('ix_CreditCards_clientId'), table_name='CreditCards')
    op.drop_table('CreditCards')
    op.drop_index(op.f('ix_ClientRoles_roleId'), table_name='ClientRoles')
    op.drop_index(op.f('ix_ClientRoles_clientId'), table_name='ClientRoles')
    op.drop_table('ClientRoles')
    op.drop_table('Roles')
    op.drop_table('Locations')
    op.drop_table('Clients')
    op.drop_table('Cars')
    # ### end Alembic commands ###
